"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_pages-dir-browser_components_CanvasContainer_js",{

/***/ "(pages-dir-browser)/./components/Canvas.js":
/*!******************************!*\
  !*** ./components/Canvas.js ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_canvasUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/canvasUtils */ \"(pages-dir-browser)/./components/utils/canvasUtils.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst Canvas = (param)=>{\n    let { canvasRef, currentTool, isDrawing, startDrawing, draw, stopDrawing, handleCanvasClick, handlePenClick, handleGeneration, tempPoints, setTempPoints } = param;\n    _s();\n    const [showBezierGuides, setShowBezierGuides] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [activePoint, setActivePoint] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1);\n    const [activeHandle, setActiveHandle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [symmetric, setSymmetric] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [lastMousePos, setLastMousePos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [hasDrawing, setHasDrawing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Add touch event prevention function\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Canvas.useEffect\": ()=>{\n            // Function to prevent default touch behavior on canvas\n            const preventTouchDefault = {\n                \"Canvas.useEffect.preventTouchDefault\": (e)=>{\n                    if (isDrawing) {\n                        e.preventDefault();\n                    }\n                }\n            }[\"Canvas.useEffect.preventTouchDefault\"];\n            // Add event listener when component mounts\n            const canvas = canvasRef.current;\n            if (canvas) {\n                canvas.addEventListener('touchstart', preventTouchDefault, {\n                    passive: false\n                });\n                canvas.addEventListener('touchmove', preventTouchDefault, {\n                    passive: false\n                });\n            }\n            // Remove event listener when component unmounts\n            return ({\n                \"Canvas.useEffect\": ()=>{\n                    if (canvas) {\n                        canvas.removeEventListener('touchstart', preventTouchDefault);\n                        canvas.removeEventListener('touchmove', preventTouchDefault);\n                    }\n                }\n            })[\"Canvas.useEffect\"];\n        }\n    }[\"Canvas.useEffect\"], [\n        isDrawing,\n        canvasRef\n    ]);\n    // Add debugging info to console\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Canvas.useEffect\": ()=>{\n            console.log('Canvas tool changed or isDrawing changed:', {\n                currentTool,\n                isDrawing\n            });\n        }\n    }[\"Canvas.useEffect\"], [\n        currentTool,\n        isDrawing\n    ]);\n    // Redraw bezier guides and control points when tempPoints change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Canvas.useEffect\": ()=>{\n            if (currentTool === 'pen' && tempPoints.length > 0 && showBezierGuides) {\n                redrawBezierGuides();\n            }\n        }\n    }[\"Canvas.useEffect\"], [\n        tempPoints,\n        showBezierGuides,\n        currentTool\n    ]);\n    // Add useEffect to draw placeholder text on empty canvas\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Canvas.useEffect\": ()=>{\n            const canvas = canvasRef.current;\n            if (!canvas) return;\n            const ctx = canvas.getContext('2d');\n            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            // Check if canvas has any non-white pixels (i.e., has a drawing)\n            const hasNonWhitePixels = Array.from(imageData.data).some({\n                \"Canvas.useEffect.hasNonWhitePixels\": (pixel, index)=>{\n                    // Check only RGB values (skip alpha)\n                    return index % 4 !== 3 && pixel !== 255;\n                }\n            }[\"Canvas.useEffect.hasNonWhitePixels\"]);\n            setHasDrawing(hasNonWhitePixels);\n            // If canvas is empty, draw placeholder text\n            if (!hasNonWhitePixels && !isDrawing) {\n                ctx.fillStyle = '#999999';\n                ctx.font = '20px Arial';\n                ctx.textAlign = 'center';\n                ctx.fillText('Draw here', canvas.width / 2, canvas.height / 2);\n            }\n        }\n    }[\"Canvas.useEffect\"], [\n        isDrawing,\n        canvasRef\n    ]);\n    const handleKeyDown = (e)=>{\n        // Add keyboard accessibility\n        if (e.key === 'Enter' || e.key === ' ') {\n            handleCanvasClick(e);\n        }\n        // Toggle symmetric handles with Shift key\n        if (e.key === 'Shift') {\n            setSymmetric(!symmetric);\n        }\n    };\n    // Draw bezier control points and guide lines\n    const redrawBezierGuides = ()=>{\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        // Get the canvas context\n        const ctx = canvas.getContext('2d');\n        // Save the current canvas state to redraw later\n        const canvasImage = new Image();\n        canvasImage.src = canvas.toDataURL();\n        canvasImage.onload = ()=>{\n            // Clear canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            // Redraw the canvas content\n            ctx.drawImage(canvasImage, 0, 0);\n            // Draw the control points and guide lines\n            (0,_utils_canvasUtils__WEBPACK_IMPORTED_MODULE_2__.drawBezierGuides)(ctx, tempPoints);\n        };\n    };\n    // Custom handler for stopping drawing with pen tool\n    const handleStopDrawing = (e)=>{\n        console.log('handleStopDrawing called', {\n            eventType: e === null || e === void 0 ? void 0 : e.type,\n            currentTool,\n            isDrawing,\n            activePoint,\n            activeHandle\n        });\n        // If we're using the pen tool with active point or handle\n        if (currentTool === 'pen') {\n            // If we were dragging a handle, just release it\n            if (activeHandle) {\n                setActiveHandle(null);\n                return;\n            }\n            // If we were dragging an anchor point, just release it\n            if (activePoint !== -1) {\n                setActivePoint(-1);\n                return;\n            }\n        }\n        stopDrawing(e);\n        // If using the pencil tool and we've just finished a drag, trigger generation\n        if (currentTool === 'pencil' && isDrawing) {\n            console.log(\"\".concat(currentTool, \" tool condition met, will try to trigger generation\"));\n            // Small delay to ensure the drawing is complete\n            setTimeout(()=>{\n                console.log('Attempting to call handleGeneration after timeout');\n                if (typeof handleGeneration === 'function') {\n                    console.log('Calling handleGeneration function');\n                    handleGeneration();\n                } else {\n                    console.error('handleGeneration is not a function:', handleGeneration);\n                }\n            }, 100);\n        } else {\n            console.log('Generation not triggered because:', {\n                isPenTool: currentTool === 'pen',\n                isPencilTool: currentTool === 'pencil',\n                wasDrawing: isDrawing\n            });\n        }\n    };\n    // Check if we clicked on an existing point or handle\n    const checkForPointOrHandle = (e)=>{\n        if (currentTool !== 'pen' || !showBezierGuides || tempPoints.length === 0) {\n            return false;\n        }\n        const canvas = canvasRef.current;\n        const { x, y } = (0,_utils_canvasUtils__WEBPACK_IMPORTED_MODULE_2__.getCoordinates)(e, canvas);\n        setLastMousePos({\n            x,\n            y\n        });\n        // Check if we clicked on a handle\n        for(let i = 0; i < tempPoints.length; i++){\n            const point = tempPoints[i];\n            // Check for handleIn\n            if ((0,_utils_canvasUtils__WEBPACK_IMPORTED_MODULE_2__.isNearHandle)(point, 'handleIn', x, y)) {\n                setActivePoint(i);\n                setActiveHandle('handleIn');\n                return true;\n            }\n            // Check for handleOut\n            if ((0,_utils_canvasUtils__WEBPACK_IMPORTED_MODULE_2__.isNearHandle)(point, 'handleOut', x, y)) {\n                setActivePoint(i);\n                setActiveHandle('handleOut');\n                return true;\n            }\n            // Check for the anchor point itself\n            const distance = Math.sqrt((point.x - x) ** 2 + (point.y - y) ** 2);\n            if (distance <= 10) {\n                setActivePoint(i);\n                setActiveHandle(null);\n                return true;\n            }\n        }\n        return false;\n    };\n    // Handle mouse move for bezier control point or handle dragging\n    const handleBezierMouseMove = (e)=>{\n        if (currentTool !== 'pen') {\n            return false;\n        }\n        const canvas = canvasRef.current;\n        const { x, y } = (0,_utils_canvasUtils__WEBPACK_IMPORTED_MODULE_2__.getCoordinates)(e, canvas);\n        const dx = x - lastMousePos.x;\n        const dy = y - lastMousePos.y;\n        // If we're dragging a handle\n        if (activePoint !== -1 && activeHandle) {\n            const newPoints = [\n                ...tempPoints\n            ];\n            (0,_utils_canvasUtils__WEBPACK_IMPORTED_MODULE_2__.updateHandle)(newPoints[activePoint], activeHandle, dx, dy, symmetric);\n            setTempPoints(newPoints);\n            setLastMousePos({\n                x,\n                y\n            });\n            return true;\n        }\n        // If we're dragging an anchor point\n        if (activePoint !== -1) {\n            const newPoints = [\n                ...tempPoints\n            ];\n            newPoints[activePoint].x += dx;\n            newPoints[activePoint].y += dy;\n            // If this point has handles, move them with the point\n            if (newPoints[activePoint].handleIn) {\n            // No need to change the handle's offset, just move with the point\n            }\n            if (newPoints[activePoint].handleOut) {\n            // No need to change the handle's offset, just move with the point\n            }\n            setTempPoints(newPoints);\n            setLastMousePos({\n                x,\n                y\n            });\n            return true;\n        }\n        return false;\n    };\n    // Handle clicks for bezier curve tool\n    const handlePenToolClick = (e)=>{\n        const canvas = canvasRef.current;\n        const { x, y } = (0,_utils_canvasUtils__WEBPACK_IMPORTED_MODULE_2__.getCoordinates)(e, canvas);\n        // Add a new point\n        if (tempPoints.length === 0) {\n            // First point has no handles initially\n            const newPoint = {\n                x,\n                y,\n                handleIn: null,\n                handleOut: null\n            };\n            setTempPoints([\n                newPoint\n            ]);\n        } else {\n            // Create a new point with handles relative to the last point\n            const newPoint = (0,_utils_canvasUtils__WEBPACK_IMPORTED_MODULE_2__.createAnchorPoint)(x, y, tempPoints[tempPoints.length - 1]);\n            setTempPoints([\n                ...tempPoints,\n                newPoint\n            ]);\n        }\n        // Always show guides when adding points\n        setShowBezierGuides(true);\n    };\n    // Toggle bezier guide visibility\n    const toggleBezierGuides = ()=>{\n        setShowBezierGuides(!showBezierGuides);\n        if (showBezierGuides) {\n            redrawBezierGuides();\n        }\n    };\n    // Draw the final bezier curve and clear control points\n    const finalizeBezierCurve = ()=>{\n        if (tempPoints.length < 2) {\n            // Need at least 2 points for a path\n            console.log('Need at least 2 control points to draw a path');\n            return;\n        }\n        const canvas = canvasRef.current;\n        // Draw the actual bezier curve\n        (0,_utils_canvasUtils__WEBPACK_IMPORTED_MODULE_2__.drawBezierCurve)(canvas, tempPoints);\n        // Hide guides and reset control points\n        setShowBezierGuides(false);\n        setTempPoints([]);\n        // Trigger generation\n        setTimeout(()=>{\n            if (typeof handleGeneration === 'function') {\n                handleGeneration();\n            }\n        }, 100);\n    };\n    // Add control point to segment\n    const addControlPoint = (e)=>{\n        if (currentTool !== 'pen' || tempPoints.length < 2) return;\n        const canvas = canvasRef.current;\n        const { x, y } = (0,_utils_canvasUtils__WEBPACK_IMPORTED_MODULE_2__.getCoordinates)(e, canvas);\n        // Find the closest segment to add a point to\n        let closestDistance = Number.POSITIVE_INFINITY;\n        let insertIndex = -1;\n        for(let i = 0; i < tempPoints.length - 1; i++){\n            const p1 = tempPoints[i];\n            const p2 = tempPoints[i + 1];\n            // Calculate distance from click to line between points\n            // This is a simplified distance calculation for demo purposes\n            const lineLength = Math.sqrt((p2.x - p1.x) ** 2 + (p2.y - p1.y) ** 2);\n            if (lineLength === 0) continue;\n            // Project point onto line\n            const t = ((x - p1.x) * (p2.x - p1.x) + (y - p1.y) * (p2.y - p1.y)) / (lineLength * lineLength);\n            // If projection is outside the line segment, skip\n            if (t < 0 || t > 1) continue;\n            // Calculate closest point on line\n            const closestX = p1.x + t * (p2.x - p1.x);\n            const closestY = p1.y + t * (p2.y - p1.y);\n            // Calculate distance to closest point\n            const distance = Math.sqrt((x - closestX) ** 2 + (y - closestY) ** 2);\n            if (distance < closestDistance && distance < 20) {\n                closestDistance = distance;\n                insertIndex = i + 1;\n            }\n        }\n        if (insertIndex > 0) {\n            // Create a new array with the new point inserted\n            const newPoints = [\n                ...tempPoints\n            ];\n            const prevPoint = newPoints[insertIndex - 1];\n            const nextPoint = newPoints[insertIndex];\n            // Create a new point at the click position with automatically calculated handles\n            const newPoint = {\n                x,\n                y,\n                // Calculate handles based on the positions of adjacent points\n                handleIn: {\n                    x: (prevPoint.x - x) * 0.25,\n                    y: (prevPoint.y - y) * 0.25\n                },\n                handleOut: {\n                    x: (nextPoint.x - x) * 0.25,\n                    y: (nextPoint.y - y) * 0.25\n                }\n            };\n            // Insert the new point\n            newPoints.splice(insertIndex, 0, newPoint);\n            setTempPoints(newPoints);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative\",\n        children: [\n            currentTool === 'pen' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-wrap mb-2 gap-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"button\",\n                        onClick: toggleBezierGuides,\n                        className: \"px-2 py-1 bg-blue-500 text-white rounded text-sm\",\n                        children: showBezierGuides ? 'Hide Guides' : 'Show Guides'\n                    }, void 0, false, {\n                        fileName: \"/Users/trudyp/Desktop/dev-gemini-2.0/components/Canvas.js\",\n                        lineNumber: 385,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"button\",\n                        onClick: ()=>setSymmetric(!symmetric),\n                        className: \"px-2 py-1 \".concat(symmetric ? 'bg-green-500' : 'bg-gray-500', \" text-white rounded text-sm\"),\n                        children: symmetric ? 'Symmetric Handles' : 'Free Handles'\n                    }, void 0, false, {\n                        fileName: \"/Users/trudyp/Desktop/dev-gemini-2.0/components/Canvas.js\",\n                        lineNumber: 393,\n                        columnNumber: 11\n                    }, undefined),\n                    tempPoints.length >= 2 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"button\",\n                        onClick: finalizeBezierCurve,\n                        className: \"px-2 py-1 bg-green-500 text-white rounded text-sm\",\n                        children: \"Draw Path\"\n                    }, void 0, false, {\n                        fileName: \"/Users/trudyp/Desktop/dev-gemini-2.0/components/Canvas.js\",\n                        lineNumber: 402,\n                        columnNumber: 13\n                    }, undefined),\n                    tempPoints.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"button\",\n                        onClick: ()=>setTempPoints([]),\n                        className: \"px-2 py-1 bg-red-500 text-white rounded text-sm\",\n                        children: \"Clear Points\"\n                    }, void 0, false, {\n                        fileName: \"/Users/trudyp/Desktop/dev-gemini-2.0/components/Canvas.js\",\n                        lineNumber: 412,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-sm ml-2\",\n                        children: [\n                            tempPoints.length,\n                            \" point\",\n                            tempPoints.length !== 1 ? 's' : '',\n                            tempPoints.length >= 2 ? ' (ready)' : ' (need 2+)'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/trudyp/Desktop/dev-gemini-2.0/components/Canvas.js\",\n                        lineNumber: 421,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full text-xs text-gray-600 mt-1\",\n                        children: \"Tip: Click to add points, click + drag handles to adjust curves, double-click on segments to add points\"\n                    }, void 0, false, {\n                        fileName: \"/Users/trudyp/Desktop/dev-gemini-2.0/components/Canvas.js\",\n                        lineNumber: 426,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/trudyp/Desktop/dev-gemini-2.0/components/Canvas.js\",\n                lineNumber: 384,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                width: 960,\n                height: 540,\n                onMouseDown: (e)=>{\n                    console.log('Canvas onMouseDown', {\n                        currentTool,\n                        isDrawing\n                    });\n                    // For pen (bezier) tool, handle differently\n                    if (currentTool === 'pen') {\n                        // Check if we clicked on an existing point or handle\n                        if (!checkForPointOrHandle(e)) {\n                            // If not interacting with existing points/handles, add a new point\n                            handlePenToolClick(e);\n                        }\n                    } else {\n                        // For other tools, use the regular drawing behavior\n                        console.log('Executing regular startDrawing handler');\n                        startDrawing(e);\n                    }\n                },\n                onMouseMove: (e)=>{\n                    // For pen (bezier) tool, handle control point/handle dragging\n                    if (currentTool === 'pen' && handleBezierMouseMove(e)) {\n                        // If we handled a bezier element move, return early\n                        return;\n                    }\n                    // For other tools, use regular drawing\n                    draw(e);\n                },\n                onMouseUp: (e)=>{\n                    console.log('onMouseUp event triggered', {\n                        currentTool,\n                        isDrawing\n                    });\n                    handleStopDrawing(e);\n                },\n                onMouseLeave: (e)=>{\n                    console.log('onMouseLeave event triggered', {\n                        currentTool,\n                        isDrawing\n                    });\n                    handleStopDrawing(e);\n                },\n                onDoubleClick: (e)=>{\n                    if (currentTool === 'pen') {\n                        addControlPoint(e);\n                    } else {\n                        handleCanvasClick(e);\n                    }\n                },\n                onClick: handleCanvasClick,\n                onTouchStart: startDrawing,\n                onTouchMove: draw,\n                onTouchEnd: handleStopDrawing,\n                onKeyDown: handleKeyDown,\n                tabIndex: 0,\n                className: \"border-2 border-black w-full sm:h-[60vh] h-[30vh] min-h-[320px] bg-white/90 touch-none \".concat(currentTool === 'pen' ? 'cursor-crosshair' : 'hover:cursor-crosshair'),\n                \"aria-label\": \"Drawing canvas\"\n            }, void 0, false, {\n                fileName: \"/Users/trudyp/Desktop/dev-gemini-2.0/components/Canvas.js\",\n                lineNumber: 432,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/trudyp/Desktop/dev-gemini-2.0/components/Canvas.js\",\n        lineNumber: 382,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Canvas, \"C+J9xmlujxtWg8dJUknHevjLFt0=\");\n_c = Canvas;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Canvas);\nvar _c;\n$RefreshReg$(_c, \"Canvas\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/Canvas.js\n"));

/***/ })

});